using System; //                                                  
using System.Text;

namespace MAINPROJECT
{
    class Program
    {
        private const char Hero = 'H';

        private static void MapMode()
        {
            int x = 20, y = 40;
            int exitX = 0, exitY = 0;

            char[][] holst = new char[22][];
            MapGenerate(holst, ref x, ref y, ref exitX, ref exitY);
            MapHod(holst, x, y, exitX, exitY);
        }

        private static void MapHod(char[][] holst, int x, int y, int exitX, int exitY)
        {
            while (true)
            {
                Console.CursorLeft = 0;
                Console.CursorTop = 0;


                holst[x][y] = Hero;

                for (int a = 0; a < 22; a++)
                {
                    for (int w = 0; w < 42; w++)
                    {
                        Console.Write(holst[a][w]);
                        Console.Write("  ");
                    }

                    Console.WriteLine(" ");
                }

                ConsoleKeyInfo Hod_2 = Console.ReadKey();

                if (Hod_2.KeyChar == 'w')
                {
                    x--;
                    holst[x + 1][y] = ' ';
                    if (holst[x][y] == '#')
                        x++;
                }
                else if (Hod_2.KeyChar == 's')
                {
                    x++;
                    holst[x - 1][y] = ' ';
                    if (holst[x][y] == '#')
                        x--;
                }
                else if (Hod_2.KeyChar == 'd')
                {
                    y++;
                    holst[x][y - 1] = ' ';
                    if (holst[x][y] == '#')
                        y--;
                }
                else if (Hod_2.KeyChar == 'a')
                {
                    y--;
                    holst[x][y + 1] = ' ';
                    if (holst[x][y] == '#')
                        y++;
                }

                if (x == exitX && y == exitY)
                {
                    Console.Clear();
                    for (int a = 0; a < 22; a++)
                    {
                        for (int w = 0; w < 42; w++)
                        {
                            holst[a][w] = '#';

                            Console.Write(holst[a][w]);
                            Console.Write("  ");
                        }

                        Console.WriteLine(" ");
                    }

                    Console.Write("You Win!");
                    return;
                }
            }
        }

        private static void MapGenerate(char[][] holst, ref int x, ref int y, ref int exitX, ref int exitY)
        {
            for (int a = 0; a < 22; a++)
            {
                holst[a] = new char[42];
            }

            char[][] n = new char[22][];
            for (int a = 0; a < 22; a++)
            {
                n[a] = new char[42];
            }

            for (int a = 0; a < 22; a++)
            {
                if (a == 0 || a == 21)
                {
                    for (int w = 0; w < 42; w++)
                    {
                        holst[a][w] = '#';
                    }
                }
                else
                {
                    for (int w = 0; w < 42; w++)
                    {
                        if (w == 0 || w == 41)
                        {
                            holst[a][w] = '#';
                        }
                        else
                        {
                            holst[a][w] = ' ';
                        }
                    }
                }
            }

            Random rnd = new Random();

            for (int a = 1; a < 21; a++)
            {
                for (int w = 1; w < 41; w++)
                {
                    int full = rnd.Next(2);
                    if (full == 0)
                        holst[a][w] = ' ';
                    else
                    {
                        holst[a][w] = '#';
                    }
                }
            }

            int k = 0;
            MapGenerateWalk(holst, x, y, ref exitX, ref exitY, rnd, ref k);

            x = 20;
            y = 40;
        }

        private static void MapGenerateWalk(char[][] holst, int x, int y, ref int exitX, ref int exitY,
            Random rnd,
            ref int k)
        {
            if (k >= 101)
            {
                if (exitX == 0 && exitY == 0)
                {
                    holst[x][y] = 'G';
                    exitX = x;
                    exitY = y;
                }

                return;
            }

            char[][] n = new char[22][];
            for (int a = 0; a < 22; a++)
            {
                n[a] = new char[42];
            }

            n[x][y] = '~';
            holst[x][y] = ' ';

            var nextDouble = rnd.NextDouble();

            if (nextDouble > 0.7)
            {
                if (x - 1 != 0 && holst[x - 1][y] != '~')
                {
                    k++;
                    MapGenerateWalk(holst, x - 1, y, ref exitX, ref exitY, rnd, ref k);
                }
            }

            if (nextDouble > 0.1)
            {
                if (y - 1 != 0 && holst[x][y - 1] != '~')
                {
                    k++;
                    MapGenerateWalk(holst, x, y - 1, ref exitX, ref exitY, rnd, ref k);
                }
            }

            if (nextDouble > 0.1)
            {
                if (x + 1 != 21 && holst[x + 1][y] != '~')
                {
                    k++;
                    MapGenerateWalk(holst, x + 1, y, ref exitX, ref exitY, rnd, ref k);
                }
            }

            if (nextDouble > 0.1)
            {
                if (y + 1 != 41 && holst[x][y + 1] != '~')
                {
                    k++;
                    MapGenerateWalk(holst, x, y + 1, ref exitX, ref exitY, rnd, ref k);
                }
            }
        }


        static void nearest(string[,] c, int y, int x, int a, int b, string mstr)
        {
            Console.OutputEncoding = Encoding.Unicode;
            var end = 0;
            var endX = a;
            var endY = b;
            var i1 = 0;
            var i2 = 0;
            var i3 = 0;
            var i4 = 0;
            var labint = new int[11, 13];
            var labb = new string[11, 13];
            for (var i = 0; i < 11; i++)
            {
                for (var j = 0; j < 13; j++)
                {
                    labb[i, j] = c[i, j];
                }
            }

            for (var z = 1; z < 17; z++)
            {
                for (var y1 = 1; y1 < 11; y1++)
                {
                    for (var x1 = 1; x1 < 13; x1++)
                    {
                        if ((labb[y1, x1] == " ") && (labb[y1, x1] != mstr))
                            continue;
                        if (labb[y1, x1] == mstr)
                            labint[y, x] = 0;
                        else if ((labb[y - 1, x] == mstr) || (labb[y + 1, x] == mstr) || (labb[y, x - 1] == mstr) ||
                                 (labb[y, x + 1] == mstr))
                            labint[y, x] = 1;

                        else if ((labint[y - 1, x] > 0) || (labint[y + 1, x] > 0) || (labint[y, x - 1] > 0) ||
                                 (labint[y, x + 1] > 0))
                        {
                            if (labint[y - 1, x] > 0)
                            {
                                i1 = labint[y - 1, x] + 1;
                            }
                            else
                            {
                                i1 = 666666666;
                            }

                            if (labint[y + 1, x] > 0)
                            {
                                i2 = labint[y + 1, x] + 1;
                            }
                            else
                            {
                                i2 = 666666666;
                            }

                            if (labint[y, x - 1] > 0)
                            {
                                i3 = labint[y, x - 1] + 1;
                            }
                            else
                            {
                                i3 = 666666666;
                            }

                            if (labint[y, x + 1] > 0)
                            {
                                i4 = labint[y, x + 1] + 1;
                            }
                            else
                            {
                                i4 = 666666666;
                            }

                            if (i1 < i2)
                            {
                                if (i3 < i4)
                                {
                                    if (i1 < i3)
                                    {
                                        labint[y, x] = i1;
                                    }
                                    else
                                    {
                                        labint[y, x] = i3;
                                    }
                                }
                                else
                                {
                                    if (i1 < i4)
                                    {
                                        labint[y, x] = i1;
                                    }
                                    else
                                    {
                                        labint[y, x] = i4;
                                    }
                                }
                            }
                            else
                            {
                                if (i3 < i4)
                                {
                                    if (i2 < i3)
                                    {
                                        labint[y, x] = i2;
                                    }
                                    else
                                    {
                                        labint[y, x] = i3;
                                    }
                                }
                                else
                                {
                                    if (i2 < i4)
                                    {
                                        labint[y, x] = i2;
                                    }
                                    else
                                    {
                                        labint[y, x] = i4;
                                    }
                                }
                            }
                        }
                    }
                }
            }

            for (var y1 = 0; y1 < 11; y1++)
            {
                for (var x1 = 0; x1 < 13; x1++)
                {
                    if (labint[y1, x1] < 0)
                    {
                        labint[y1, x1] = 0;
                    }
                }
            }

            for (var y1 = 0; y1 < 11; y1++)
            {
                for (var x1 = 0; x1 < 13; x1++)
                {
                    if (labb[y1, x1] == "H")
                    {
                        endY = y1;
                        endX = x1;
                        end = labint[y1, x1];
                    }
                }
            }

            for (var z = 1; z < 16; z++)
            {
                for (var y1 = 9; y1 > 1; y1--)
                {
                    for (var x1 = 11; x1 > 0; x1--)
                    {
                        if (labb[y1, x1] != " ")
                            continue;

                        if ((labint[y1 - 1, x1] <= 0) && (labint[y1 + 1, x1] <= 0) && (labint[y1, x1 - 1] <= 0) &&
                            (labint[y1, x1 + 1] <= 0))

                            continue;

                        if ((labint[endY - 1, endX] == end - 1) && (labb[endY - 1, endX] == " "))
                        {
                            labb[endY - 1, endX] = ".";
                            end--;
                            endY--;
                        }

                        if ((labint[endY + 1, endX] == end - 1) && (labb[endY + 1, endX] == " "))
                        {
                            labb[endY + 1, endX] = ".";
                            end--;
                            endY++;
                        }

                        if ((labint[endY, endX - 1] == end - 1) && (labb[endY, endX - 1] == " "))
                        {
                            labb[endY, endX - 1] = ".";
                            end--;
                            endX--;
                        }

                        if ((labint[endY, endX + 1] != end - 1) || (labb[endY, endX + 1] != " "))
                            continue;

                        labb[endY, endX + 1] = ".";
                        end--;
                        endX++;
                    }
                }
            }

            if (labb[y, x + 1] == ".")
            {
                c[y, x] = " ";
                c[y, x + 1] = mstr;
            }
            else if (labb[y, x - 1] == ".")
            {
                c[y, x] = " ";
                c[y, x - 1] = mstr;
            }
            else if (labb[y + 1, x] == ".")
            {
                c[y, x] = " ";
                c[y + 1, x] = mstr;
            }
            else if (labb[y - 1, x] == ".")
            {
                c[y, x] = " ";
                c[y - 1, x] = mstr;
            }

            return;
        }

        static void Main(string[] args) // MMMMMMMMMMMAAAAAAAAAAAAAAIIIIIIIIIIIIIINNNNNNNNNNNNNNNNNN
        {
            Random rand = new Random();
            //Console.WriteLine("PRESS 'H' TO TURN ON HARD MODE");
            //Console.WriteLine("PRESS 'T' TO SEE TRUTH");


            string[] BAD = {"COLOR BLINDNESS", "SLOW FINGERS", "NOMBS"};
            string[] GOOD = {"FAST FINGERS", "VAMPIRE", "BOMBER"};
            string[] guns = {"PISTOL", "LASER", "RAILGUN", "DOSHIRACTHROWER", "SHOTGUN", "BAZUKA", "KNIFE"};
            string gun = "PISTOL";
            string bad = BAD[rand.Next(1, 3)];
            string good = GOOD[rand.Next(1, 3)];
            while ((bad == "SLOW FINGERS") && (good == "FAST FINGERS"))
            {
                bad = BAD[rand.Next(1, 3) - 1];
                good = GOOD[rand.Next(1, 3) - 1];
            }

            bool end = false;
            var lvl = 1;
            var hp = 3;
            ConsoleKeyInfo move;
            Console.OutputEncoding = Encoding.Unicode;
            var boombs = 2;
            while (lvl < 5)
            {
                int x, y, ID;
                var boss = true;
                x = 6;
                y = 5;
                int IX = 14;
                int IY = 14;
                ID = 420;
                var map = new string [11, 13];
                string[,] start =
                {
                    {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"},
                    {"#", "۩", " ", " ", " ", " ", " ", " ", " ", " ", " ", "۩", "#"},
                    {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                    {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                    {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                    {" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
                    {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                    {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                    {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                    {"#", "۩", " ", " ", " ", " ", " ", " ", " ", " ", " ", "۩", "#"},
                    {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"}
                };
                for (var i = 0; i < 11; i++)
                {
                    for (var t = 0; t < 13; t++)
                    {
                        map[i, t] = start[i, t];
                    }
                }

                var edit = false;
                var hard = false;

                move = Console.ReadKey();
                if (move.KeyChar == 'h')
                {
                    hard = true;
                    hp = 1;
                    boombs = 0;
                }
                else if (move.KeyChar == 't')
                {
                    edit = true;
                    hp = 100;
                    boombs = 100;
                }

                var change = false;
                var reload = 0;
                string[,,] room2 =
                {
                    {
                        //spawn 
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"},
                        {"#", " ", " ", " ", " ", "#", " ", "#", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", "۩", " ", "#", " ", "#", " ", "۩", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", "#", " ", "#", " ", " ", " ", " ", "#"},
                        {"#", "#", "#", " ", "#", "#", " ", "#", "#", " ", "#", "#", "#"},
                        {" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
                        {"#", "#", "#", " ", "#", "#", " ", "#", "#", " ", "#", "#", "#"},
                        {"#", " ", " ", " ", " ", "#", " ", "#", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", "۩", " ", "#", " ", "#", " ", "۩", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", "#", " ", "#", " ", " ", " ", " ", "#"},
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"},
                    },
                    {
                        //сокровища
                        //L - лут.
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", "#", " ", "#", " ", " ", "#", "#", " ", " ", " ", "#"},
                        {"#", " ", " ", "L", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", "#", "#", " ", "#", "L", " ", " ", " ", " ", "#"},
                        {" ", " ", "#", " ", " ", " ", "#", "#", " ", "#", " ", " ", " "},
                        {"#", " ", " ", " ", "#", "L", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", "#", "#", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", "#", " ", "#", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"},
                    },
                    {
                        //just rooms
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", "#", " ", " ", " ", "#", "#", " ", " ", "T", " ", " ", "#"},
                        {"#", " ", "#", "T", "#", "Z", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", "#", " ", " ", "#", "#", "#", " ", " ", " ", "#"},
                        {" ", " ", " ", " ", "#", " ", " ", "Z", " ", " ", " ", " ", " "},
                        {"#", " ", " ", "#", "Z", " ", "#", " ", "#", " ", " ", " ", "#"},
                        {"#", "#", " ", " ", "#", " ", "#", " ", " ", " ", "T", " ", "#"},
                        {"#", " ", "T", " ", " ", " ", " ", " ", " ", "#", " ", " ", "#"},
                        {"#", " ", "#", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"},
                    },
                    {
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", "#", " ", "#", "T", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", "#", "#", "#", " ", "#", "#", " ", " ", "#"},
                        {" ", " ", " ", " ", " ", "Z", "#", "Z", " ", " ", " ", " ", " "},
                        {"#", " ", " ", " ", " ", " ", " ", "#", "#", " ", " ", " ", "#"},
                        {"#", " ", "#", " ", "#", "#", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", "#", " ", " ", "#", "T", "#", " ", "#"},
                        {"#", " ", "#", " ", "#", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"},
                    },
                    {
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", "T", " ", " ", " ", " ", " ", "Z", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", "#", "#", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", "Z", " ", " ", " ", " ", " ", " ", "#"},
                        {" ", " ", " ", " ", " ", "#", " ", "#", " ", "Z", " ", " ", " "},
                        {"#", " ", " ", " ", " ", " ", " ", "#", "Z", "#", " ", " ", "#"},
                        {"#", " ", " ", " ", "#", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", "T", "#", " ", " ", " ", "#", "T", " ", "#"},
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"},
                    },
                    {
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", "Z", " ", " ", "#"},
                        {"#", " ", " ", "#", "T", "#", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", "Z", " ", " ", " ", "#"},
                        {" ", " ", "#", "T", " ", "#", "Z", " ", "#", " ", " ", " ", " "},
                        {"#", " ", "#", " ", " ", " ", " ", "Z", " ", " ", " ", " ", "#"},
                        {"#", " ", "#", " ", " ", " ", " ", " ", "#", "#", "T", " ", "#"},
                        {"#", " ", "Z", "#", "#", "#", " ", "#", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", "#", " ", " ", "#"},
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"},
                    },
                    {
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", "#", " ", " ", "#", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", "#", " ", "#", "#", " ", "#", " ", " ", " ", "#"},
                        {"#", " ", "#", " ", " ", " ", " ", " ", " ", "#", " ", " ", "#"},
                        {" ", " ", "#", " ", "0", " ", " ", "0", " ", "#", " ", " ", " "},
                        {"#", " ", "#", " ", " ", "#", "#", " ", " ", "#", " ", " ", "#"},
                        {"#", " ", " ", "#", " ", " ", " ", " ", "#", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", "#", "#", "#", "#", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"},
                    },
                    {
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", "Z", " ", " ", " ", "#", "Z", " ", "Z", " ", " ", "#"},
                        {"#", " ", " ", " ", "Z", "#", "#", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", "#", " ", "#", "Z", " ", " ", " ", " ", "#"},
                        {" ", " ", " ", " ", " ", " ", "#", " ", "Z", " ", " ", " ", " "},
                        {"#", " ", " ", " ", " ", " ", "#", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", "Z", " ", "Z", " ", "#", "Z", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", "Z", " ", " ", "#", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"},
                    },
                };
                string[,,] roomtr =
                {
                    {
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", "#", " ", "#", " ", " ", "#", "#", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", "#", "#", " ", "#", "L", " ", " ", " ", " ", "#"},
                        {" ", " ", "#", " ", " ", " ", "#", "#", " ", "#", " ", " ", " "},
                        {"#", " ", " ", " ", "#", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", "#", "#", " ", "#", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", "#", " ", "#", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"},
                    },
                    {
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", "#", "#", "#", "#", "#", "#", "#", " ", " ", "#"},
                        {"#", " ", " ", "#", " ", " ", " ", " ", " ", "#", " ", " ", "#"},
                        {"#", " ", " ", "#", " ", "#", "#", "#", " ", "#", " ", " ", "#"},
                        {" ", " ", " ", "#", " ", "#", "L", "#", " ", "#", " ", " ", " "},
                        {"#", " ", " ", "#", " ", "#", " ", "#", " ", "#", " ", " ", "#"},
                        {"#", " ", " ", "#", " ", " ", " ", "#", " ", "#", " ", " ", "#"},
                        {"#", " ", " ", "#", "#", "#", "#", "#", " ", "#", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"},
                    },
                    {
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"},
                        {"#", "۩", " ", " ", " ", " ", " ", " ", " ", " ", " ", "۩", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {" ", " ", " ", " ", " ", " ", "L", " ", " ", " ", " ", " ", " "},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", "۩", " ", " ", " ", " ", " ", " ", " ", " ", " ", "۩", "#"},
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"},
                    },
                };
                string[,,] room =
                {
                    {
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"}
                    },

                    {
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"},
                        {"#", "T", " ", " ", "#", " ", " ", " ", " ", "T", "#", " ", "#"},
                        {"#", " ", "#", " ", "#", " ", "#", " ", "#", " ", "#", " ", "#"},
                        {"#", " ", "#", " ", "#", " ", "#", " ", "#", " ", "#", " ", "#"},
                        {"#", " ", "#", " ", "#", "#", "#", " ", "#", " ", "#", " ", "#"},
                        {" ", " ", "#", " ", "#", "T", " ", "T", "#", " ", "#", " ", " "},
                        {"#", " ", "#", " ", "#", " ", "#", "#", "#", " ", "#", " ", "#"},
                        {"#", " ", "#", " ", "#", " ", "#", " ", "#", " ", "#", " ", "#"},
                        {"#", " ", "#", " ", "#", " ", "#", " ", "#", " ", "#", " ", "#"},
                        {"#", " ", "#", "T", " ", " ", " ", " ", "#", " ", " ", "T", "#"},
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"}
                    },
                    {
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"},
                        {"#", "T", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", "#", " ", "#", "#", " ", "#", "#", "#", "#", "T", "#"},
                        {"#", " ", "#", " ", "#", "T", " ", " ", " ", "#", " ", " ", "#"},
                        {"#", "#", "#", " ", "#", "#", "#", "#", "T", "#", "T", "#", "#"},
                        {" ", " ", "#", " ", " ", " ", " ", " ", " ", "#", " ", " ", " "},
                        {"#", " ", "#", " ", "#", "#", " ", "#", "#", "#", " ", "#", "#"},
                        {"#", " ", " ", " ", "T", "#", " ", " ", " ", "#", " ", " ", "#"},
                        {"#", " ", "#", "#", "#", "#", "#", "#", " ", "#", "#", " ", "#"},
                        {"#", " ", "T", " ", " ", " ", " ", "#", " ", "T", " ", " ", "#"},
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"}
                    },
                    {
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", "T", " ", "#", "#", "#", " ", "T", " ", " ", "#"},
                        {"#", " ", " ", " ", "T", " ", "T", " ", "T", " ", " ", " ", "#"},
                        {"#", " ", "#", " ", " ", "T", " ", "T", " ", " ", "#", " ", "#"},
                        {" ", " ", "#", " ", "T", " ", "T", " ", "T", " ", "#", " ", " "},
                        {"#", " ", "#", " ", " ", "T", " ", "T", " ", " ", "#", " ", "#"},
                        {"#", " ", " ", " ", "T", " ", "T", " ", "T", " ", " ", " ", "#"},
                        {"#", " ", " ", "T", " ", "#", "#", "#", " ", "T", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"}
                    },
                    {
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", "#", "#", "#", "#", "#", " ", " ", " ", "#"},
                        {"#", " ", " ", "#", " ", "0", "0", "0", " ", "#", " ", " ", "#"},
                        {" ", " ", "#", " ", " ", "0", "#", "0", " ", " ", "#", " ", " "},
                        {"#", " ", " ", "#", " ", "0", "0", "0", " ", "#", " ", " ", "#"},
                        {"#", " ", " ", " ", "#", "#", "#", "#", "#", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"}
                    },
                    {
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"},
                        {"#", " ", " ", " ", "#", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", "T", " ", "#", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", "#", " ", " ", " ", "#", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", "#", " ", "T", " ", "#", " ", " ", " ", " ", "#"},
                        {" ", " ", " ", " ", "#", " ", " ", " ", "#", " ", " ", " ", " "},
                        {"#", " ", " ", " ", " ", "#", " ", "T", " ", "#", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", "#", " ", " ", " ", "#", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", "#", " ", "T", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", "#", " ", " ", " ", "#"},
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"}
                    },
                    {
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", "#", " ", "#", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", "#", " ", "#", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", "#", " ", "#", " ", " ", " ", " ", "#"},
                        {" ", " ", " ", " ", " ", "#", " ", "#", " ", " ", " ", " ", " "},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", "#", " ", " ", " ", "#", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", "#", "#", "#", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"}
                    },
                    {
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"},
                        {"#", "T", " ", " ", " ", " ", " ", "#", " ", " ", " ", "T", "#"},
                        {"#", " ", "T", " ", " ", " ", " ", "#", " ", " ", "T", " ", "#"},
                        {"#", " ", " ", "#", "#", "#", "#", "#", " ", "#", " ", " ", "#"},
                        {"#", "#", " ", "#", " ", "T", " ", " ", " ", "#", " ", " ", "#"},
                        {" ", " ", " ", "#", " ", " ", "T", " ", " ", "#", " ", " ", " "},
                        {"#", " ", " ", "#", " ", " ", " ", "T", " ", "#", " ", "#", "#"},
                        {"#", " ", " ", "#", " ", "#", "#", "#", "#", "#", " ", " ", "#"},
                        {"#", " ", "T", " ", " ", "#", " ", " ", " ", " ", "T", " ", "#"},
                        {"#", "T", " ", " ", " ", "#", " ", " ", " ", " ", " ", "T", "#"},
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"}
                    },
                    {
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"},
                        {"#", " ", " ", "#", "#", "#", "#", "#", "#", "#", " ", " ", "#"},
                        {"#", " ", " ", "#", "#", "#", "#", "#", "#", "#", " ", " ", "#"},
                        {"#", " ", " ", " ", "#", "#", "#", "#", "#", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", "#", "#", "#", " ", " ", " ", " ", "#"},
                        {" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"}
                    },
                    {
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"},
                        {"#", " ", " ", " ", " ", "#", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", "#", "#", " ", "#", "#", "#", "#", "#", "#", " ", "#"},
                        {"#", " ", "#", "T", " ", " ", " ", "T", "#", "G", "#", " ", "#"},
                        {"#", " ", "#", " ", "T", " ", "T", " ", "#", " ", "#", " ", "#"},
                        {" ", " ", "#", " ", " ", "T", " ", " ", "#", " ", "#", " ", " "},
                        {"#", " ", "#", " ", "T", " ", "T", " ", "#", " ", "#", " ", "#"},
                        {"#", " ", "#", "T", " ", " ", " ", "T", " ", " ", "#", " ", "#"},
                        {"#", " ", "#", "#", "#", "#", "#", "#", "#", "#", "#", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"}
                    },
                    {
                        {"#", "#", "#", "#", "#", "#", "#", "#", "#", "#", "#", "#", "#"},
                        {"#", " ", "#", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", "#", " ", "#", "#", "#", "#", "#", " ", "#", " ", "#"},
                        {"#", " ", "#", "Z", " ", " ", " ", " ", "#", " ", "#", " ", "#"},
                        {"#", " ", "#", " ", "#", "#", "#", "#", "#", " ", "#", " ", "#"},
                        {" ", " ", "#", " ", " ", " ", " ", " ", "#", " ", "#", " ", " "},
                        {"#", " ", "#", "#", "#", "#", "#", "#", "#", "#", "#", " ", "#"},
                        {"#", " ", "#", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", "#", "#", "#", "#", "#", "#", "#", "#", "#", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", "#", "#", "#", "#", "#", "#", "#", "#", "#", "#", "#", "#"}
                    },
                    {
                        {"#", "#", "#", "#", "#", "#", "#", "#", "#", "#", "#", "#", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", "Z", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
                        {"#", " ", " ", "#", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", "#", "#", "#", "#", "#", "#", "#", "#", "#", "#", "#", "#"}
                    },
                };
                //};
                string[,,] clearroom =
                {
                    {
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"}
                    },
                    {
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"},
                        {"#", " ", " ", " ", "#", " ", " ", " ", " ", " ", "#", " ", "#"},
                        {"#", " ", "#", " ", "#", " ", "#", " ", "#", " ", "#", " ", "#"},
                        {"#", " ", "#", " ", "#", " ", "#", " ", "#", " ", "#", " ", "#"},
                        {"#", " ", "#", " ", "#", "#", "#", " ", "#", " ", "#", " ", "#"},
                        {" ", " ", "#", " ", "#", " ", " ", " ", "#", " ", "#", " ", " "},
                        {"#", " ", "#", " ", "#", " ", "#", "#", "#", " ", "#", " ", "#"},
                        {"#", " ", "#", " ", "#", " ", "#", " ", "#", " ", "#", " ", "#"},
                        {"#", " ", "#", " ", "#", " ", "#", " ", "#", " ", "#", " ", "#"},
                        {"#", " ", "#", " ", " ", " ", " ", " ", "#", " ", " ", " ", "#"},
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"}
                    },
                    {
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", "#", " ", "#", "#", " ", "#", "#", "#", "#", " ", "#"},
                        {"#", " ", "#", " ", "#", " ", " ", " ", " ", "#", " ", " ", "#"},
                        {"#", "#", "#", " ", "#", "#", "#", "#", " ", "#", " ", "#", "#"},
                        {" ", " ", "#", " ", " ", " ", " ", " ", " ", "#", " ", " ", " "},
                        {"#", " ", "#", " ", "#", "#", " ", "#", "#", "#", " ", "#", "#"},
                        {"#", " ", " ", " ", " ", "#", " ", " ", " ", "#", " ", " ", "#"},
                        {"#", " ", "#", "#", "#", "#", "#", "#", " ", "#", "#", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", "#", " ", " ", " ", " ", "#"},
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"}
                    },
                    {
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", "#", "#", "#", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", "#", " ", " ", " ", " ", " ", " ", " ", "#", " ", "#"},
                        {" ", " ", "#", " ", " ", " ", " ", " ", " ", " ", "#", " ", " "},
                        {"#", " ", "#", " ", " ", " ", " ", " ", " ", " ", "#", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", "#", "#", "#", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"}
                    },
                    {
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", "#", "#", "#", "#", "#", " ", " ", " ", "#"},
                        {"#", " ", " ", "#", " ", "0", "0", "0", " ", "#", " ", " ", "#"},
                        {" ", " ", "#", " ", " ", "0", "#", "0", " ", " ", "#", " ", " "},
                        {"#", " ", " ", "#", " ", "0", "0", "0", " ", "#", " ", " ", "#"},
                        {"#", " ", " ", " ", "#", "#", "#", "#", "#", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"}
                    },
                    {
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"},
                        {"#", " ", " ", " ", "#", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", "#", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", "#", " ", " ", " ", "#", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", "#", " ", " ", " ", "#", " ", " ", " ", " ", "#"},
                        {" ", " ", " ", " ", "#", " ", " ", " ", "#", " ", " ", " ", " "},
                        {"#", " ", " ", " ", " ", "#", " ", " ", " ", "#", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", "#", " ", " ", " ", "#", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", "#", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", "#", " ", " ", " ", "#"},
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"}
                    },
                    {
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", "#", " ", "#", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", "#", " ", "#", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", "#", " ", "#", " ", " ", " ", " ", "#"},
                        {" ", " ", " ", " ", " ", "#", " ", "#", " ", " ", " ", " ", " "},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", "#", " ", " ", " ", "#", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", "#", "#", "#", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"}
                    },
                    {
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", "#", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", "#", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", "#", "#", "#", "#", "#", " ", "#", " ", " ", "#"},
                        {"#", "#", " ", "#", " ", " ", " ", " ", " ", "#", " ", " ", "#"},
                        {" ", " ", " ", "#", " ", " ", " ", " ", " ", "#", " ", " ", " "},
                        {"#", " ", " ", "#", " ", " ", " ", " ", " ", "#", " ", "#", "#"},
                        {"#", " ", " ", "#", " ", "#", "#", "#", "#", "#", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", "#", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", "#", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"}
                    },
                    {
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"},
                        {"#", " ", " ", "#", "#", "#", "#", "#", "#", "#", " ", " ", "#"},
                        {"#", " ", " ", "#", "#", "#", "#", "#", "#", "#", " ", " ", "#"},
                        {"#", " ", " ", " ", "#", "#", "#", "#", "#", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", "#", "#", "#", " ", " ", " ", " ", "#"},
                        {" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"}
                    },
                    {
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"},
                        {"#", " ", " ", " ", " ", "#", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", " ", "#", "#", " ", "#", "#", "#", "#", "#", "#", " ", "#"},
                        {"#", " ", "#", "T", " ", " ", " ", "T", "#", "G", "#", " ", "#"},
                        {"#", " ", "#", " ", "T", " ", "T", " ", "#", " ", "#", " ", "#"},
                        {" ", " ", "#", " ", " ", "T", " ", " ", "#", " ", "#", " ", " "},
                        {"#", " ", "#", " ", "T", " ", "T", " ", "#", " ", "#", " ", "#"},
                        {"#", " ", "#", "T", " ", " ", " ", "T", " ", " ", "#", " ", "#"},
                        {"#", " ", "#", "#", "#", "#", "#", "#", "#", "#", "#", " ", "#"},
                        {"#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"},
                        {"#", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#"}
                    },
                };


                string[,] roomap = new string [29, 29];
                int[,] roomnear = new int[29, 29];

                for (int i = 0; i < 29; i++)
                {
                    for (int j = 0; j < 29; j++)
                    {
                        roomap[i, j] = ".";
                    }
                }

                roomap[14, 14] = "#";
                int Q = 6;
                if (lvl == 1)
                {
                    Q = 12;
                }

                if (lvl == 2)
                {
                    Q = 13;
                }

                if (lvl == 3)
                {
                    Q = 15;
                }

                if (lvl == 4)
                {
                    Q = 19;
                }

                for (int q = 0; q < Q; q++)
                {
                    for (int i = 0; i < 29; i++)
                    {
                        for (int j = 0; j < 29; j++)
                        {
                            if (roomap[i, j] == "#")
                            {
                                if (roomap[i - 1, j] != "#")
                                {
                                    roomap[i - 1, j] = "!";
                                }

                                if (roomap[i + 1, j] != "#")
                                {
                                    roomap[i + 1, j] = "!";
                                }

                                if (roomap[i, j - 1] != "#")
                                {
                                    roomap[i, j - 1] = "!";
                                }

                                if (roomap[i, j + 1] != "#")
                                {
                                    roomap[i, j + 1] = "!";
                                }
                            }
                        }
                    }

                    int num = 0;
                    for (int i = 0; i < 29; i++)
                    {
                        for (int j = 0; j < 29; j++)
                        {
                            if (roomap[i, j] == "!")
                            {
                                roomap[i, j] = Convert.ToString(num);
                                num++;
                            }
                        }
                    }

                    Random pie = new Random();
                    string rom = Convert.ToString(pie.Next(num));
                    for (int i = 0; i < 29; i++)
                    {
                        for (int j = 0; j < 29; j++)
                        {
                            if (roomap[i, j] == rom)
                            {
                                roomap[i, j] = "#";
                            }
                            else if (roomap[i, j] != "#")
                            {
                                roomap[i, j] = ".";
                            }
                        }
                    }
                }

                Console.Clear();
                for (int t = 0; t < 29; t++)
                {
                    for (int j = 0; j < 29; j++)
                    {
                        if (roomap[t, j] == ".")
                        {
                            roomap[t, j] = " ";
                        }

                        if (roomap[t, j] == "#")
                        {
                            int awokado = 0;
                            if (roomap[t + 1, j] == "#")
                            {
                                awokado++;
                            }

                            if (roomap[t - 1, j] == "#")
                            {
                                awokado++;
                            }

                            if (roomap[t, j + 1] == "#")
                            {
                                awokado++;
                            }

                            if (roomap[t, j - 1] == "#")
                            {
                                awokado++;
                            }

                            roomnear[t, j] = awokado;
                        }
                    }
                }


                int[] roomID = new int[29 * 29 + 1];
                bool[] roomcl = new bool[29 * 29 + 1];
                for (int i = 0; i < 29 * 29 + 1; i++)
                {
                    roomcl[i] = false;
                }

                for (var i = 0; i < 29 * 29 - 1; i++)
                {
                    roomID[i] = rand.Next(8);
                    if (roomID[i] < 0)
                    {
                        roomID[i] = 0;
                    }
                }

                roomID[ID] = 0;
                int JOJOOJ = rand.Next(Q);
                int VEGASAS = 0;
                int bossy = 13;
                int bossx = 14;
                bool e = false;
                {
                    for (int i = 0; i < 29; i++)
                    {
                        for (int j = 0; j < 29; j++)
                        {
                            if (roomap[i, j] == "#")
                            {
                                VEGASAS++;
                            }

                            if (VEGASAS == JOJOOJ)
                            {
                                bossy = i;
                                bossx = j;
                                e = true;
                                break;
                            }
                        }

                        if (e)
                        {
                            break;
                        }
                    }
                }
                int JOJOJO = rand.Next(Q);
                int VEGASS = 0;
                int trsy = 13;
                int trsx = 14;
                bool eeee = false;
                {
                    for (int i = 0; i < 29; i++)
                    {
                        for (int j = 0; j < 29; j++)
                        {
                            if (roomap[i, j] == "#")
                            {
                                VEGASS++;
                            }

                            if (VEGASS == JOJOJO)
                            {
                                trsy = i;
                                trsx = j;
                                eeee = true;
                                break;
                            }
                        }

                        if (e)
                        {
                            break;
                        }
                    }
                }
                bool enemis = false;
                int tr = rand.Next(2);


                while ((move.KeyChar != 'q') && (boss == true)) // _________ START OF GAMEPLAY _________
                {
                    if ((change) && (IX != bossx) && (IY != bossy))
                    {
                        change = false;
                        if (roomcl[ID] == false)
                        {
                            for (var i = 0; i < 11; i++)
                            {
                                for (var t = 0; t < 13; t++)
                                {
                                    map[i, t] = room[roomID[ID], i, t];
                                }
                            }
                        }
                        else
                        {
                            change = false;
                            for (var i = 0; i < 11; i++)
                            {
                                for (var t = 0; t < 13; t++)
                                {
                                    map[i, t] = clearroom[roomID[ID], i, t];
                                }
                            }
                        }
                    }
                    else if ((IX == bossx) && (change) && (IY == bossy))
                    {
                        change = false;
                        for (int i = 0; i < 11; i++)
                        {
                            for (int j = 0; j < 13; j++)
                            {
                                map[i, j] = room[9, i, j];
                            }
                        }
                    }
                    else if ((IX == trsx) && (change) && (IY == trsy))
                    {
                        change = false;
                        for (int i = 0; i < 11; i++)
                        {
                            for (int j = 0; j < 13; j++)
                            {
                                map[i, j] = roomtr[0, i, j];
                            }
                        }
                    }

                    enemis = true;
                    for (int i = 0; i < 11; i++)
                    {
                        for (int j = 0; j < 13; j++)
                        {
                            if ((map[i, j] == "T") || (map[i, j] == "+") || (map[i, j] == "!"))
                            {
                                enemis = false;
                                map[5, 0] = "ᚙ";
                                map[0, 6] = "ᚙ";
                                map[10, 6] = "ᚙ";
                                map[5, 12] = "ᚙ";
                            }
                        }
                    }

                    if (enemis)
                    {
                        roomcl[ID] = true;
                        map[5, 0] = " ";
                        map[0, 6] = " ";
                        map[10, 6] = " ";
                        map[5, 12] = " ";
                    }

                    if (roomap[IY - 1, IX] != "#")
                    {
                        map[0, 6] = "#";
                    }

                    if (roomap[IY + 1, IX] != "#")
                    {
                        map[10, 6] = "#";
                    }

                    if (roomap[IY, IX - 1] != "#")
                    {
                        map[5, 0] = "#";
                    }

                    if (roomap[IY, IX + 1] != "#")
                    {
                        map[5, 12] = "#";
                    }


                    if (edit)
                    {
                        Console.Write("ID - ");
                        Console.Write(ID);
                        Console.Write("\n");
                        Console.Write("x - ");
                        Console.Write(x);
                        Console.Write("\n");
                        Console.Write("y - ");
                        Console.Write(y);
                        Console.Write("\n");
                        Console.Write("IX - ");
                        Console.Write(IX);
                        Console.Write("\n");
                        Console.Write("IY - ");
                        Console.Write(IY);
                        Console.Write("\n");
                        Console.Write("BOSS x - ");
                        Console.Write(bossx);
                        Console.Write("\n");
                        Console.Write("BOSS y - ");
                        Console.Write(bossy);
                        Console.Write("\n");
                        Console.Write("treasure x - ");
                        Console.Write(trsx);
                        Console.Write("\n");
                        Console.Write("treasure y - ");
                        Console.Write(trsy);
                        Console.Write("\n");
                        Console.Write("roomID - ");
                        Console.Write(roomID[ID]);
                        Console.Write("\n");
                    }

                    for (var i = 0; i < 11; i++)
                    {
                        for (var t = 0; t < 13; t++)
                        {
                            if (bad != "COLOR BLINDNESS")
                            {
                                if (map[i, t] == "H")
                                {
                                    Console.ForegroundColor = ConsoleColor.Yellow;
                                }

                                if ((map[i, t] == "#") && (ID == tr))
                                {
                                    Console.ForegroundColor = ConsoleColor.Yellow;
                                }
                                else if (map[i, t] == "#")
                                {
                                    Console.ForegroundColor = ConsoleColor.White;
                                }

                                if ((map[i, t] == "T") || (map[i, t] == "!") || (map[i, t] == "+"))
                                {
                                    Console.ForegroundColor = ConsoleColor.DarkRed;
                                }

                                if (map[i, t] == "G")
                                {
                                    Console.ForegroundColor = ConsoleColor.Magenta;
                                }

                                if ((map[i, t] == "Z") || (map[i, t] == "z"))

                                {
                                    Console.ForegroundColor = ConsoleColor.DarkGreen;
                                }

                                if (map[i, t] == "■")
                                {
                                    Console.ForegroundColor = ConsoleColor.DarkMagenta;
                                }

                                if (map[i, t] == "۩")
                                {
                                    Console.ForegroundColor = ConsoleColor.DarkBlue;
                                }
                            }

                            Console.Write(map[i, t]);
                            Console.Write(" ");
                            Console.ResetColor();
                        }

                        Console.Write("\n");
                    }

                    Console.Write("ОРУЖИЕ - ");
                    Console.Write(gun);
                    Console.Write("\n");
                    Console.Write("ПЕРЕЗАРЯДКА - ");
                    for (var i = 0; i < reload; i++)
                    {
                        Console.Write("|");
                    }

                    Console.Write("\n");
                    Console.Write("БОМБЫ - ");
                    for (var i = 0; i < boombs; i++)
                    {
                        if (bad != "COLOR BLINDNESS")
                        {
                            Console.ForegroundColor = ConsoleColor.DarkCyan;
                        }

                        Console.Write("💣");
                        Console.Write(" ");
                        Console.ResetColor();
                    }

                    Console.Write("\n");
                    Console.Write("ЖИЗНИ - ");
                    for (var i = 0; i < hp; i++)
                    {
                        if (bad != "COLOR BLINDNESS")
                        {
                            Console.ForegroundColor = ConsoleColor.Red;
                        }

                        Console.Write("♥");
                        Console.Write(" ");
                        Console.ResetColor();
                    }

                    for (var i = 0; i < 3 - hp; i++)
                    {
                        Console.Write("♡");
                        Console.Write(" ");
                    }

                    Console.Write("\n");
                    Console.Write("bad - ");
                    Console.Write(bad);
                    Console.Write("\n");
                    Console.Write("good - ");
                    Console.Write(good);
                    Console.Write("\n");
                    move = Console.ReadKey();
                    // "PISTOL", "LASER", "RAILGUN", "DOSHIRACTHROWER", "SHOTGUN", "BAZUKA", "KNIFE"
                    if (move.KeyChar == 'e')
                    {
                        if (map[y - 1, x] == "۩")
                        {
                            map[y - 1, x] = " ";
                            bad = BAD[rand.Next(1, 4) - 1];
                            good = GOOD[rand.Next(1, 4) - 1];
                            while ((bad == "SLOW FINGERS") && (good == "FAST FINGERS"))
                            {
                                bad = BAD[rand.Next(1, 4) - 1];
                                good = GOOD[rand.Next(1, 4) - 1];
                            }
                        }

                        if (map[y + 1, x] == "۩")
                        {
                            map[y + 1, x] = " ";
                            bad = BAD[rand.Next(1, 4) - 1];
                            good = GOOD[rand.Next(1, 4) - 1];
                            while ((bad == "SLOW FINGERS") && (good == "FAST FINGERS"))
                            {
                                bad = BAD[rand.Next(1, 4) - 1];
                                good = GOOD[rand.Next(1, 4) - 1];
                            }
                        }

                        if (map[y, x + 1] == "۩")
                        {
                            map[y, x + 1] = " ";
                            bad = BAD[rand.Next(1, 4) - 1];
                            good = GOOD[rand.Next(1, 4) - 1];
                            while ((bad == "SLOW FINGERS") && (good == "FAST FINGERS"))
                            {
                                bad = BAD[rand.Next(1, 4) - 1];
                                good = GOOD[rand.Next(1, 4) - 1];
                            }
                        }

                        if (map[y, x - 1] == "۩")
                        {
                            map[y, x - 1] = " ";
                            bad = BAD[rand.Next(1, 4) - 1];
                            good = GOOD[rand.Next(1, 4) - 1];
                            while ((bad == "SLOW FINGERS") && (good == "FAST FINGERS"))
                            {
                                bad = BAD[rand.Next(1, 4) - 1];
                                good = GOOD[rand.Next(1, 4) - 1];
                            }
                        }

                        if (map[y - 1, x] == "L") // --------- LUT --------------------------------
                        {
                            gun = guns[rand.Next(3)];
                            map[y - 1, x] = " ";
                        }

                        if (map[y + 1, x] == "L")
                        {
                            gun = guns[rand.Next(3)];
                            map[y + 1, x] = " ";
                        }

                        if (map[y, x + 1] == "L")
                        {
                            gun = guns[rand.Next(3)];
                            map[y, x + 1] = " ";
                        }

                        if (map[y, x - 1] == "L")
                        {
                            gun = guns[rand.Next(3)];
                            map[y, x - 1] = " ";
                        }
                    }

                    if (move.KeyChar == 'f')
                    {
                        string numcom = "";
                        string com = Console.ReadLine();
                        if (com == "weapon")
                        {
                            Console.WriteLine("\n");
                            Console.WriteLine("Введите оружие");
                            numcom = Console.ReadLine();
                            gun = numcom;
                        }

                        if (com == "lvl")
                        {
                            Console.WriteLine("\n");
                            Console.WriteLine("босс убит, для продолженя нажмите Enter");
                            boss = false;
                        }

                        if (com == "good")
                        {
                            Console.WriteLine("\n");
                            Console.WriteLine("Введите хороший перк");
                            numcom = Console.ReadLine();
                            good = numcom;
                        }

                        if (com == "bad")
                        {
                            Console.WriteLine("\n");
                            Console.WriteLine("Введите плохой перк");
                            numcom = Console.ReadLine();
                            bad = numcom;
                        }

                        if (com == "godmode")
                        {
                            Console.WriteLine("\n");
                            Console.WriteLine("Введите on/off");
                            numcom = Console.ReadLine();
                            if (numcom == "on")
                            {
                                edit = true;
                            }

                            if (numcom == "off")
                            {
                                edit = false;
                            }
                        }

                        if (com == "tp")
                        {
                            Console.WriteLine("\n");
                            Console.WriteLine("Введите x и y");
                            numcom = Console.ReadLine();
                            IY = int.Parse(numcom);
                            numcom = Console.ReadLine();
                            IX = int.Parse(numcom);
                        }

                        if (com == "look")
                        {
                            for (int i = 0; i < 29; i++)
                            {
                                for (int j = 0; j < 29; j++)
                                {
                                    roomap[i, j] = " ";
                                }
                            }
                            Console.WriteLine("\n");
                            Console.WriteLine("Режим просмотра вкл");
                            
                            change = true;
                            IY = 14;
                            IX = 14;
                            y = 5;
                            x = 6;
                            roomap[14, 14] = "#";
                            roomap[14, 15] = "#";
                            roomap[14, 16] = "#";
                            roomap[14, 17] = "#";
                            roomap[14, 18] = "#";
                            roomap[14, 19] = "#";
                            bossy = 14;
                            bossx = 19;
                            trsx = 18;
                            trsy = 14;
                            roomID[420] = 6;
                            roomID[421] = 6;
                            roomID[422] = 0;
                            roomID[423] = 6;
                            roomID[424] = 6;
                            roomID[425] = 6;
                            numcom = Console.ReadLine();
                        }
                        if (com == "change")
                        {
                            Console.WriteLine("\n");
                            Console.WriteLine("change = true, для продожения введите Enter");
                            change = true;
                            numcom = Console.ReadLine();
                        }

                        if (com == "tp")
                        {
                            Console.WriteLine("\n");
                            Console.WriteLine("Введите x и y");
                            numcom = Console.ReadLine();
                            y = int.Parse(numcom);
                            numcom = Console.ReadLine();
                            x = int.Parse(numcom);
                        }

                        if (com == "tp_room")
                        {
                            Console.WriteLine("\n");
                            Console.WriteLine("Введите x и y");
                            numcom = Console.ReadLine();
                            IY = int.Parse(numcom);
                            numcom = Console.ReadLine();
                            IX = int.Parse(numcom);
                        }
                    }

                    if (move.KeyChar == 'm')
                    {
                        for (int i = 0; i < 29; i++)

                        {
                            for (int j = 0; j < 29; j++)
                            {
                                if ((IX == j) && (IY == i))
                                {
                                    Console.ForegroundColor = ConsoleColor.Blue;
                                    Console.Write("O");
                                    Console.ResetColor();
                                }
                                else if ((edit) && (i == bossy) && (j == bossx))
                                {
                                    Console.ForegroundColor = ConsoleColor.Red;
                                    Console.Write("B");
                                    Console.ResetColor();
                                }
                                else if ((roomap[i, j] == "#") && (i == trsy) && (j == trsx) && (edit))
                                {
                                    Console.ForegroundColor = ConsoleColor.Yellow;
                                    Console.Write("T");
                                    Console.ResetColor();
                                }
                                else if (roomap[i, j] == "#")
                                {
                                    Console.Write("#");
                                }
                                else
                                {
                                    Console.Write(" ");
                                }
                            }

                            Console.Write("\n");
                        }

                        string timer = Console.ReadLine();
                    }

                    if ((move.KeyChar == 'w') && (y != 0))
                    {
                        if ((map[y - 1, x] == " ") || (map[y - 1, x] == "■"))
                        {
                            map[y, x] = " ";
                            y -= 1;
                        }
                    }
                    else if ((move.KeyChar == 's') && (y != 10))
                    {
                        if ((map[y + 1, x] == " ") || (map[y + 1, x] == "■"))
                        {
                            map[y, x] = " ";
                            y = y + 1;
                        }
                    }
                    else if ((move.KeyChar == 'a') && (x != 0))
                    {
                        if ((map[y, x - 1] == " ") || (map[y, x - 1] == "■"))
                        {
                            map[y, x] = " ";
                            x -= 1;
                        }
                    }
                    else if ((move.KeyChar == 'd') && (x != 12))
                    {
                        if ((map[y, x + 1] == " ") || (map[y, x + 1] == "■"))
                        {
                            map[y, x] = " ";
                            x = x + 1;
                        }
                    }

                    if ((move.KeyChar == '5') && (boombs > 0) && (roomID[(IX + 1) * 29 + IY + 1] != 9) &&
                        (bad != "NOMBS"))
                    {
                        boombs--;
                        if (ID != 1) ;
                        {
                            roomID[ID] = 0;
                        }
                        change = true;
                        if ((good == "BOMBER") && (hp != 3))
                        {
                            hp = hp + 1;
                        }
                    }

                    if (gun == "PISTOL"
                    ) // "PISTOL", "LASER", "RAILGUN", "DOSHIRACTHROWER", "SHOTGUN", "BAZUKA", "KNIFE"
                    {
                        if ((move.KeyChar == '4') && (reload == 0))
                        {
                            reload = 3;
                            if (good == "FAST FINGERS")
                            {
                                reload = 2;
                            }
                            else if (bad == "SLOW FINGERS")
                            {
                                reload = 4;
                            }

                            for (int i = x - 1; i > 0; i -= 1)
                            {
                                if ((map[y, i] != " ") && (map[y, i] != "G") && (map[y, i] != "T") &&
                                    (map[y, i] != "!") &&
                                    (map[y, i] != "+"))
                                {
                                    break;
                                }
                                else if (map[y, i] == "G")
                                {
                                    boss = false;
                                    map[y, i] = " ";
                                    break;
                                }
                                else if ((map[y, i] == "T") || (map[y, i] == "!") || (map[y, i] == "+"))
                                {
                                    if ((good == "VAMPIRE") && (hp < 3))
                                    {
                                        hp = hp + 1;
                                    }

                                    map[y, i] = " ";
                                    break;
                                }
                            }
                        }
                        else if ((move.KeyChar == '6') && (reload == 0))
                        {
                            reload = 3;
                            if (good == "FAST FINGERS")
                            {
                                reload = 2;
                            }
                            else if (bad == "SLOW FINGERS")
                            {
                                reload = 4;
                            }

                            for (int i = x + 1; i < 13; i += 1)
                            {
                                if ((map[y, i] != " ") && (map[y, i] != "G") && (map[y, i] != "T") &&
                                    (map[y, i] != "!") &&
                                    (map[y, i] != "+"))
                                {
                                    break;
                                }
                                else if (map[y, i] == "G")
                                {
                                    boss = false;
                                    map[y, i] = " ";
                                    break;
                                }
                                else if ((map[y, i] == "T") || (map[y, i] == "!") || (map[y, i] == "+")
                                )
                                {
                                    if ((good == "VAMPIRE") && (hp < 3))
                                    {
                                        hp = hp + 1;
                                    }

                                    map[y, i] = " ";
                                    break;
                                }
                            }
                        }
                        else if ((move.KeyChar == '8') && (reload == 0))
                        {
                            reload = 3;
                            if (good == "FAST FINGERS")
                            {
                                reload = 2;
                            }
                            else if (bad == "SLOW FINGERS")
                            {
                                reload = 4;
                            }

                            for (int i = y - 1; i > 0; i--)
                            {
                                if ((map[i, x] != " ") && (map[i, x] != "G") && (map[i, x] != "T") &&
                                    (map[i, x] != "!") &&
                                    (map[i, x] != "+"))
                                {
                                    break;
                                }
                                else if (map[i, x] == "G")
                                {
                                    boss = false;
                                    map[i, x] = " ";
                                    break;
                                }
                                else if ((map[i, x] == "T") || (map[i, x] == "!") || (map[i, x] == "+"))
                                {
                                    if ((good == "VAMPIRE") && (hp < 3))
                                    {
                                        hp = hp + 1;
                                    }

                                    map[i, x] = " ";
                                    break;
                                }
                            }
                        }
                        else if ((move.KeyChar == '2') && (reload == 0))
                        {
                            reload = 3;
                            if (good == "FAST FINGERS")
                            {
                                reload = 2;
                            }
                            else if (bad == "SLOW FINGERS")
                            {
                                reload = 4;
                            }

                            for (int i = y + 1; i < 11; i += 1)
                            {
                                if ((map[i, x] != " ") && (map[i, x] != "G") && (map[i, x] != "T") &&
                                    (map[i, x] != "!") &&
                                    (map[i, x] != "+"))
                                {
                                    break;
                                }
                                else if (map[i, x] == "G")
                                {
                                    boss = false;
                                    map[i, x] = " ";
                                    break;
                                }
                                else if ((map[i, x] == "T") || (map[i, x] == "!") || (map[i, x] == "+"))
                                {
                                    if ((good == "VAMPIRE") && (hp < 3))
                                    {
                                        hp = hp + 1;
                                    }

                                    map[i, x] = " ";
                                    break;
                                }
                            }
                        }
                    }
                    else if (gun == "LASER"
                    ) // "PISTOL", "LASER", "RAILGUN", "DOSHIRACTHROWER", "SHOTGUN", "BAZUKA", "KNIFE"
                    {
                        if ((move.KeyChar == '4') && (reload == 0))
                        {
                            reload = 3;
                            if (good == "FAST FINGERS")
                            {
                                reload = 2;
                            }
                            else if (bad == "SLOW FINGERS")
                            {
                                reload = 4;
                            }

                            for (int i = x - 1; i > 0; i -= 1)
                            {
                                if ((map[y, i] != " ") && (map[y, i] != "G") && (map[y, i] != "T") &&
                                    (map[y, i] != "!") &&
                                    (map[y, i] != "+"))
                                {
                                    break;
                                }
                                else if (map[y, i] == "G")
                                {
                                    boss = false;
                                    map[y, i] = " ";
                                    break;
                                }
                                else if ((map[y, i] == "T") || (map[y, i] == "!") || (map[y, i] == "+"))
                                {
                                    if ((good == "VAMPIRE") && (hp < 3))
                                    {
                                        hp = hp + 1;
                                    }

                                    map[y, i] = " ";
                                }
                            }
                        }
                        else if ((move.KeyChar == '6') && (reload == 0))
                        {
                            reload = 3;
                            if (good == "FAST FINGERS")
                            {
                                reload = 2;
                            }
                            else if (bad == "SLOW FINGERS")
                            {
                                reload = 4;
                            }

                            for (int i = x + 1; i < 13; i += 1)
                            {
                                if ((map[y, i] != " ") && (map[y, i] != "G") && (map[y, i] != "T") &&
                                    (map[y, i] != "!") &&
                                    (map[y, i] != "+"))
                                {
                                    break;
                                }
                                else if (map[y, i] == "G")
                                {
                                    boss = false;
                                    map[y, i] = " ";
                                    break;
                                }
                                else if ((map[y, i] == "T") || (map[y, i] == "!") || (map[y, i] == "+")
                                )
                                {
                                    if ((good == "VAMPIRE") && (hp < 3))
                                    {
                                        hp = hp + 1;
                                    }

                                    map[y, i] = " ";
                                }
                            }
                        }
                        else if ((move.KeyChar == '8') && (reload == 0))
                        {
                            reload = 3;
                            if (good == "FAST FINGERS")
                            {
                                reload = 2;
                            }
                            else if (bad == "SLOW FINGERS")
                            {
                                reload = 4;
                            }

                            for (int i = y - 1; i > 0; i--)
                            {
                                if ((map[i, x] != " ") && (map[i, x] != "G") && (map[i, x] != "T") &&
                                    (map[i, x] != "!") &&
                                    (map[i, x] != "+"))
                                {
                                    break;
                                }
                                else if (map[i, x] == "G")
                                {
                                    boss = false;
                                    map[i, x] = " ";
                                    break;
                                }
                                else if ((map[i, x] == "T") || (map[i, x] == "!") || (map[i, x] == "+"))
                                {
                                    if ((good == "VAMPIRE") && (hp < 3))
                                    {
                                        hp = hp + 1;
                                    }

                                    map[i, x] = " ";
                                }
                            }
                        }
                        else if ((move.KeyChar == '2') && (reload == 0))
                        {
                            reload = 3;
                            if (good == "FAST FINGERS")
                            {
                                reload = 2;
                            }
                            else if (bad == "SLOW FINGERS")
                            {
                                reload = 4;
                            }

                            for (int i = y + 1; i < 11; i += 1)
                            {
                                if ((map[i, x] != " ") && (map[i, x] != "G") && (map[i, x] != "T") &&
                                    (map[i, x] != "!") &&
                                    (map[i, x] != "+"))
                                {
                                    break;
                                }
                                else if (map[i, x] == "G")
                                {
                                    boss = false;
                                    map[i, x] = " ";
                                    break;
                                }
                                else if ((map[i, x] == "T") || (map[i, x] == "!") || (map[i, x] == "+"))
                                {
                                    if ((good == "VAMPIRE") && (hp < 3))
                                    {
                                        hp = hp + 1;
                                    }

                                    map[i, x] = " ";
                                }
                            }
                        }
                    }

                    if (gun == "RAILGUN"
                    ) // "PISTOL", "LASER", "RAILGUN", "DOSHIRACTHROWER", "SHOTGUN", "BAZUKA", "KNIFE"
                    {
                        if ((move.KeyChar == '4') && (reload == 0))
                        {
                            reload = 3;
                            if (good == "FAST FINGERS")
                            {
                                reload = 2;
                            }
                            else if (bad == "SLOW FINGERS")
                            {
                                reload = 4;
                            }

                            for (int i = x - 1; i > 0; i -= 1)
                            {
                                if ((map[y, i] != " ") && (map[y, i] != "G") && (map[y, i] != "T") &&
                                    (map[y, i] != "!") &&
                                    (map[y, i] != "+"))
                                {
                                    map[y, i] = " ";
                                    break;
                                }
                                else if (map[y, i] == "G")
                                {
                                    boss = false;
                                    map[y, i] = " ";
                                    break;
                                }
                                else if ((map[y, i] == "T") || (map[y, i] == "!") || (map[y, i] == "+"))
                                {
                                    if ((good == "VAMPIRE") && (hp < 3))
                                    {
                                        hp = hp + 1;
                                    }

                                    map[y, i] = " ";
                                }
                            }
                        }
                        else if ((move.KeyChar == '6') && (reload == 0))
                        {
                            reload = 3;
                            if (good == "FAST FINGERS")
                            {
                                reload = 2;
                            }
                            else if (bad == "SLOW FINGERS")
                            {
                                reload = 4;
                            }

                            for (int i = x + 1; i < 12; i += 1)
                            {
                                if ((map[y, i] != " ") && (map[y, i] != "G") && (map[y, i] != "T") &&
                                    (map[y, i] != "!") &&
                                    (map[y, i] != "+"))
                                {
                                    map[y, i] = " ";
                                    break;
                                }
                                else if (map[y, i] == "G")
                                {
                                    boss = false;
                                    map[y, i] = " ";
                                    break;
                                }
                                else if ((map[y, i] == "T") || (map[y, i] == "!") || (map[y, i] == "+")
                                )
                                {
                                    if ((good == "VAMPIRE") && (hp < 3))
                                    {
                                        hp = hp + 1;
                                    }

                                    map[y, i] = " ";
                                }
                            }
                        }
                        else if ((move.KeyChar == '8') && (reload == 0))
                        {
                            reload = 3;
                            if (good == "FAST FINGERS")
                            {
                                reload = 2;
                            }
                            else if (bad == "SLOW FINGERS")
                            {
                                reload = 4;
                            }

                            for (int i = y - 1; i > 0; i--)
                            {
                                if ((map[i, x] != " ") && (map[i, x] != "G") && (map[i, x] != "T") &&
                                    (map[i, x] != "!") &&
                                    (map[i, x] != "+"))
                                {
                                    break;
                                    map[i, x] = " ";
                                }
                                else if (map[i, x] == "G")
                                {
                                    boss = false;
                                    map[i, x] = " ";
                                    break;
                                }
                                else if ((map[i, x] == "T") || (map[i, x] == "!") || (map[i, x] == "+"))
                                {
                                    if ((good == "VAMPIRE") && (hp < 3))
                                    {
                                        hp = hp + 1;
                                    }

                                    map[i, x] = " ";
                                }
                            }
                        }
                        else if ((move.KeyChar == '2') && (reload == 0))
                        {
                            reload = 3;
                            if (good == "FAST FINGERS")
                            {
                                reload = 2;
                            }
                            else if (bad == "SLOW FINGERS")
                            {
                                reload = 4;
                            }

                            for (int i = y + 1; i < 12; i += 1)
                            {
                                if ((map[i, x] != " ") && (map[i, x] != "G") && (map[i, x] != "T") &&
                                    (map[i, x] != "!") &&
                                    (map[i, x] != "+"))
                                {
                                    map[i, x] = " ";
                                    break;
                                }
                                else if (map[i, x] == "G")
                                {
                                    boss = false;
                                    map[i, x] = " ";
                                    break;
                                }
                                else if ((map[i, x] == "T") || (map[i, x] == "!") || (map[i, x] == "+"))
                                {
                                    if ((good == "VAMPIRE") && (hp < 3))
                                    {
                                        hp = hp + 1;
                                    }

                                    map[i, x] = " ";
                                }
                            }
                        }
                    }

                    if (gun == "DOSHIRACTHROWER"
                    ) // "PISTOL", "LASER", "RAILGUN", "DOSHIRACTHROWER", "SHOTGUN", "BAZUKA", "KNIFE"
                    {
                        if ((move.KeyChar == '4') && (reload == 0))
                        {
                            reload = 3;
                            if (good == "FAST FINGERS")
                            {
                                reload = 2;
                            }
                            else if (bad == "SLOW FINGERS")
                            {
                                reload = 4;
                            }

                            map[y + 1, x - 1] = " ";
                            map[y, x - 1] = " ";
                            map[y - 1, x - 1] = " ";
                            map[y + 1, x - 2] = " ";
                            map[y, x - 2] = " ";
                            map[y - 1, x - 2] = " ";
                            map[y + 1, x - 3] = " ";
                            map[y, x - 3] = " ";
                            map[y - 1, x - 3] = " ";
                        }
                        else if ((move.KeyChar == '6') && (reload == 0))
                        {
                            reload = 3;
                            if (good == "FAST FINGERS")
                            {
                                reload = 2;
                            }
                            else if (bad == "SLOW FINGERS")
                            {
                                reload = 4;
                            }

                            map[y + 1, x + 1] = " ";
                            map[y, x + 1] = " ";
                            map[y - 1, x + 1] = " ";
                            map[y + 1, x + 2] = " ";
                            map[y, x + 2] = " ";
                            map[y - 1, x + 2] = " ";
                            map[y + 1, x + 3] = " ";
                            map[y, x + 3] = " ";
                            map[y - 1, x + 3] = " ";
                        }
                        else if ((move.KeyChar == '8') && (reload == 0))
                        {
                            reload = 3;
                            if (good == "FAST FINGERS")
                            {
                                reload = 2;
                            }
                            else if (bad == "SLOW FINGERS")
                            {
                                reload = 4;
                            }

                            map[y - 1, x - 1] = " ";
                            map[y - 1, x] = " ";
                            map[y - 1, x + 1] = " ";
                            map[y - 2, x - 1] = " ";
                            map[y - 2, x] = " ";
                            map[y - 2, x + 1] = " ";
                            map[y - 3, x - 1] = " ";
                            map[y - 3, x] = " ";
                            map[y - 3, x + 1] = " ";
                        }
                        else if ((move.KeyChar == '2') && (reload == 0))
                        {
                            reload = 3;
                            if (good == "FAST FINGERS")
                            {
                                reload = 2;
                            }
                            else if (bad == "SLOW FINGERS")
                            {
                                reload = 4;
                            }

                            map[y + 1, x - 1] = " ";
                            map[y + 1, x] = " ";
                            map[y + 1, x + 1] = " ";
                            map[y + 2, x - 1] = " ";
                            map[y + 2, x] = " ";
                            map[y + 2, x + 1] = " ";
                            map[y + 3, x - 1] = " ";
                            map[y + 3, x] = " ";
                            map[y + 3, x + 1] = " ";
                        }
                    }

                    if (gun == "SHOTGUN"
                    ) // "PISTOL", "LASER", "RAILGUN", "DOSHIRACTHROWER", "SHOTGUN", "BAZUKA", "KNIFE"
                    {
                        if ((move.KeyChar == '4') && (reload == 0))
                        {
                            reload = 3;
                            if (good == "FAST FINGERS")
                            {
                                reload = 2;
                            }
                            else if (bad == "SLOW FINGERS")
                            {
                                reload = 4;
                            }

                            for (int i = x - 1; i > 0; i -= 1)
                            {
                                if ((map[y, i] != " ") && (map[y, i] != "G") && (map[y, i] != "T") &&
                                    (map[y, i] != "!") &&
                                    (map[y, i] != "+"))
                                {
                                    break;
                                }
                                else if (map[y, i] == "G")
                                {
                                    boss = false;
                                    map[y, i] = " ";
                                    break;
                                }
                                else if ((map[y, i] == "T") || (map[y, i] == "!") || (map[y, i] == "+"))
                                {
                                    if ((good == "VAMPIRE") && (hp < 3))
                                    {
                                        hp = hp + 1;
                                    }

                                    map[y, i] = " ";
                                    break;
                                }
                            }
                        }
                        else if ((move.KeyChar == '6') && (reload == 0))
                        {
                            reload = 3;
                            if (good == "FAST FINGERS")
                            {
                                reload = 2;
                            }
                            else if (bad == "SLOW FINGERS")
                            {
                                reload = 4;
                            }

                            for (int i = x + 1; i < 13; i += 1)
                            {
                                if ((map[y, i] != " ") && (map[y, i] != "G") && (map[y, i] != "T") &&
                                    (map[y, i] != "!") &&
                                    (map[y, i] != "+"))
                                {
                                    break;
                                }
                                else if (map[y, i] == "G")
                                {
                                    boss = false;
                                    map[y, i] = " ";
                                    break;
                                }
                                else if ((map[y, i] == "T") || (map[y, i] == "!") || (map[y, i] == "+")
                                )
                                {
                                    if ((good == "VAMPIRE") && (hp < 3))
                                    {
                                        hp = hp + 1;
                                    }

                                    map[y, i] = " ";
                                    break;
                                }
                            }
                        }
                        else if ((move.KeyChar == '8') && (reload == 0))
                        {
                            reload = 3;
                            if (good == "FAST FINGERS")
                            {
                                reload = 2;
                            }
                            else if (bad == "SLOW FINGERS")
                            {
                                reload = 4;
                            }

                            for (int i = y - 1; i > 0; i--)
                            {
                                if ((map[i, x] != " ") && (map[i, x] != "G") && (map[i, x] != "T") &&
                                    (map[i, x] != "!") &&
                                    (map[i, x] != "+"))
                                {
                                    break;
                                }
                                else if (map[i, x] == "G")
                                {
                                    boss = false;
                                    map[i, x] = " ";
                                    break;
                                }
                                else if ((map[i, x] == "T") || (map[i, x] == "!") || (map[i, x] == "+"))
                                {
                                    if ((good == "VAMPIRE") && (hp < 3))
                                    {
                                        hp = hp + 1;
                                    }

                                    map[i, x] = " ";
                                    break;
                                }
                            }
                        }
                        else if ((move.KeyChar == '2') && (reload == 0))
                        {
                            reload = 3;
                            if (good == "FAST FINGERS")
                            {
                                reload = 2;
                            }
                            else if (bad == "SLOW FINGERS")
                            {
                                reload = 4;
                            }

                            for (int i = y + 1; i < 12; i += 1)
                            {
                                if ((map[i, x] != " ") && (map[i, x] != "G") && (map[i, x] != "T") &&
                                    (map[i, x] != "!") &&
                                    (map[i, x] != "+"))
                                {
                                    break;
                                }
                                else if (map[i, x] == "G")
                                {
                                    boss = false;
                                    map[i, x] = " ";
                                    break;
                                }
                                else if ((map[i, x] == "T") || (map[i, x] == "!") || (map[i, x] == "+"))
                                {
                                    if ((good == "VAMPIRE") && (hp < 3))
                                    {
                                        hp = hp + 1;
                                    }

                                    map[i, x] = " ";
                                    break;
                                }
                            }
                        }
                    }

                    int d = -1;
                    if ((move.KeyChar == '8') || (move.KeyChar == '6'))
                    {
                        if (gun == "SHOTGUN")
                        {
                            reload = 5;
                            if (good == "FAST FINGERS")
                            {
                                reload = 4;
                            }

                            if (bad == "SLOW FINGERS")
                            {
                                reload = 6;
                            }

                            for (int i = y; i < 0; i++)
                            {
                                d++;
                                map[i, x + d] = ".";
                                if ((map[i, x + d] != " ") && (map[i, x + d] != "G") && (map[i, x + d] != "T") &&
                                    (map[i, x + d] != "!") &&
                                    (map[i, x + d] != "+"))
                                {
                                    break;
                                }
                                else if (map[i, x + d] == "G")
                                {
                                    boss = false;
                                    map[i, x + d] = " ";
                                    break;
                                }
                                else if ((map[i, x + d] == "T") || (map[i, x + d] == "!") || (map[i, x + d] == "+"))
                                {
                                    if ((good == "VAMPIRE") && (hp < 3))
                                    {
                                        hp = hp + 1;
                                    }

                                    map[i, x + d] = " ";
                                    break;
                                }
                            }
                        }
                    }
                    if ((move.KeyChar == '2') || (move.KeyChar == '6'))
                    {
                        if (gun == "SHOTGUN")
                        {
                            reload = 5;
                            if (good == "FAST FINGERS")
                            {
                                reload = 4;
                            }

                            if (bad == "SLOW FINGERS")
                            {
                                reload = 6;
                            }

                            for (int i = y; i > 11; i++)
                            {
                                d++;
                                map[i, x + d] = ".";
                                if ((map[i, x + d] != " ") && (map[i, x + d] != "G") && (map[i, x + d] != "T") &&
                                    (map[i, x + d] != "!") &&
                                    (map[i, x + d] != "+"))
                                {
                                    break;
                                }
                                else if (map[i, x + d] == "G")
                                {
                                    boss = false;
                                    map[i, x + d] = " ";
                                    break;
                                }
                                else if ((map[i, x + d] == "T") || (map[i, x + d] == "!") || (map[i, x + d] == "+"))
                                {
                                    if ((good == "VAMPIRE") && (hp < 3))
                                    {
                                        hp = hp + 1;
                                    }

                                    map[i, x + d] = " ";
                                    break;
                                }
                            }
                        }
                    }
                    if ((move.KeyChar == '2') || (move.KeyChar == '4'))
                    {
                        if (gun == "SHOTGUN")
                        {
                            d = 1;
                            reload = 5;
                            if (good == "FAST FINGERS")
                            {
                                reload = 4;
                            }

                            if (bad == "SLOW FINGERS")
                            {
                                reload = 6;
                            }

                            for (int i = y; i > 11; i++)
                            {
                                d--;
                                map[i, x + d] = ".";
                                if ((map[i, x + d] != " ") && (map[i, x + d] != "G") && (map[i, x + d] != "T") &&
                                    (map[i, x + d] != "!") &&
                                    (map[i, x + d] != "+"))
                                {
                                    break;
                                }
                                else if (map[i, x + d] == "G")
                                {
                                    boss = false;
                                    map[i, x + d] = " ";
                                    break;
                                }
                                else if ((map[i, x + d] == "T") || (map[i, x + d] == "!") || (map[i, x + d] == "+"))
                                {
                                    if ((good == "VAMPIRE") && (hp < 3))
                                    {
                                        hp = hp + 1;
                                    }

                                    map[i, x + d] = " ";
                                    break;
                                }
                            }
                        }
                    }
                    if ((move.KeyChar == '4') || (move.KeyChar == '8'))
                    {
                        if (gun == "SHOTGUN")
                        {
                            d = 1;
                            reload = 5;
                            if (good == "FAST FINGERS")
                            {
                                reload = 4;
                            }

                            if (bad == "SLOW FINGERS")
                            {
                                reload = 6;
                            }

                            for (int i = y; i > 11; i++)
                            {
                                d--;
                                map[i, x + d] = ".";
                                if ((map[i, x + d] != " ") && (map[i, x + d] != "G") && (map[i, x + d] != "T") &&
                                    (map[i, x + d] != "!") &&
                                    (map[i, x + d] != "+"))
                                {
                                    break;
                                }
                                else if (map[i, x + d] == "G")
                                {
                                    boss = false;
                                    map[i, x + d] = " ";
                                    break;
                                }
                                else if ((map[i, x + d] == "T") || (map[i, x + d] == "!") || (map[i, x + d] == "+"))
                                {
                                    if ((good == "VAMPIRE") && (hp < 3))
                                    {
                                        hp = hp + 1;
                                    }

                                    map[i, x + d] = " ";
                                    break;
                                }
                            }
                        }
                    }

                    map[y, x] = "H";
                    switch (x)
                    {
                        case 0:
                            IX--;
                            change = true;
                            ID = ID - 1;
                            x = 12;
                            break;
                        case 12:
                            IX++;
                            change = true;
                            ID = ID + 1;
                            x = 0;
                            break;
                        default:
                        {
                            switch (y)
                            {
                                case 0:
                                    ID -= 29;
                                    IY--;
                                    change = true;
                                    y = 10;
                                    break;
                                case 10:
                                    ID += 29;
                                    IY++;
                                    change = true;
                                    y = 1;
                                    break;
                            }

                            break;
                        }
                    }

                    Console.Clear();
                    reload = reload - 1;
                    if (reload == -1)
                    {
                        reload = 0;
                    }

                    for (var i = 0; i < 11; i++)
                    {
                        for (var j = 0; j < 13; j++)
                        {
                            for (var s = 0; s < 11; s++)
                            {
                                for (var m = 0; m < 13; m++)
                                {
                                    if (start[s, m] == "M")
                                    {
                                        nearest(start, s, m, y, x, "M");
                                        if (((map[s + 2, m] == "H") || (map[s - 2, m] == "H") ||
                                             (map[s + 2, m] == "H") || (map[s, m + 2] == "H") ||
                                             (map[s - 1, m + 1] == "H") || (map[s + 1, m - 1] == "H") ||
                                             (map[s + 1, m + 1] == "H") || (map[s - 1, m - 1] == "H")) &&
                                            (map[s, m] == " "))
                                        {
                                            start[s, m] = " ";
                                            map[s, m] = "M";
                                        }
                                    }
                                }
                            }

                            switch (map[i, j])
                            {
                                case "z":
                                    map[i, j] = "Z";
                                    break;
                                case "Z":
                                {
                                    nearest(map, i, j, y, x, "Z"); //!!!!!!!!!!!!!!!!

                                    if ((map[i, j + 1] == "H") || (map[i, j - 1] == "H") || (map[i + 1, j] == "H") ||
                                        (map[i - 1, j] == "H"))
                                        hp -= 1;

                                    map[i, j] = "z";
                                    break;
                                }

                                case "M" when (map[i, j + 1] == "H") || (map[i, j - 1] == "H") ||
                                              (map[i + 1, j] == "H") || (map[i - 1, j] == "H"):
                                    hp -= 1;
                                    break;
                                case "M":
                                    start[i, j] = "M";
                                    map[i, j] = "o";
                                    break;
                                ///⃝ ⭕ ◯ 🔴
                                case "⃝":
                                    map[i, j] = "⭕";
                                    break;
                                case "⭕":
                                    map[i, j] = "◯";
                                    break;
                                case "◯":
                                {
                                    map[i + 1, j] = " ";
                                    map[i - 1, j] = " ";
                                    map[i, j + 1] = " ";
                                    map[i, j - 1] = " ";
                                    map[i + 1, j - 1] = " ";
                                    map[i - 1, j + 1] = " ";
                                    map[i + 1, j + 1] = " ";
                                    map[i - 1, j - 1] = " ";
                                    nearest(map, i, j, y, x, "◯");
                                    if (map[i + 1, j] == "◯")
                                    {
                                        map[i + 1, j] = "⃝";
                                        map[i + 2, j] = "🔴";
                                        map[i, j] = "🔴";
                                        map[i + 1, j + 1] = "🔴";
                                        map[i + 1, j - 1] = "🔴";
                                        map[i + 2, j - 1] = "🔴";
                                        map[i, j + 1] = "🔴";
                                        map[i + 2, j + 1] = "🔴";
                                        map[i, j - 1] = "🔴";
                                    }
                                    else if (map[i, j + 1] == "◯")
                                    {
                                        map[i, j + 1] = "⃝";
                                        map[i + 1, j + 1] = "🔴";
                                        map[i - 1, j + 1] = "🔴";
                                        map[i, j + 2] = "🔴";
                                        map[i, j] = "🔴";
                                        map[i + 1, j] = "🔴";
                                        map[i - 1, j + 2] = "🔴";
                                        map[i + 1, j + 2] = "🔴";
                                        map[i - 1, j] = "🔴";
                                    }
                                    else if (map[i - 1, j] == "◯")
                                    {
                                        map[i - 1, j] = "⃝";
                                        map[i, j] = "🔴";
                                        map[i - 2, j] = "🔴";
                                        map[i - 1, j + 1] = "🔴";
                                        map[i - 1, j - 1] = "🔴";
                                        map[i, j - 1] = "🔴";
                                        map[i - 2, j + 1] = "🔴";
                                        map[i, j + 1] = "🔴";
                                        map[i - 2, j - 1] = "🔴";
                                    }
                                    else if (map[i, j - 1] == "◯")
                                    {
                                        map[i, j - 2] = "⃝";
                                        map[i + 1, j - 1] = "🔴";
                                        map[i - 1, j - 1] = "🔴";
                                        map[i, j] = "🔴";
                                        map[i, j - 2] = "🔴";
                                        map[i + 1, j - 2] = "🔴";
                                        map[i - 1, j] = "🔴";
                                        map[i + 1, j] = "🔴";
                                        map[i - 1, j - 2] = "🔴";
                                    }

                                    break;
                                }

                                case "▼":
                                {
                                    for (var k = i; k <= 9; k++)
                                    {
                                        if (map[k, j] == "H")
                                        {
                                            hp -= 1;
                                            break;
                                        }
                                        else if ((map[k, j] == " ") || (map[k, j] == "■"))
                                        {
                                            map[k, j] = "■";
                                        }
                                        else if (map[k, j] == "▼")
                                        {
                                        }
                                        else
                                        {
                                            break;
                                        }
                                    }

                                    map[i, j] = "2";
                                    break;
                                }

                                case "1":
                                    map[i, j] = "▼";
                                    break;
                                case "2":
                                {
                                    for (var k = i; k <= 9; k++)
                                    {
                                        if (map[k, j] == "■")
                                        {
                                            map[k, j] = " ";
                                        }
                                    }

                                    map[i, j] = "1";
                                    break;
                                }

                                case "►":
                                {
                                    for (var k = j; k <= 11; k++)
                                    {
                                        if (map[i, k] == "H")
                                        {
                                            hp -= 1;
                                            break;
                                        }
                                        else if ((map[i, k] == " ") || (map[i, k] == "■"))
                                        {
                                            map[i, k] = "■";
                                        }
                                        else if (map[i, k] == "►")
                                        {
                                        }
                                        else
                                        {
                                            break;
                                        }
                                    }

                                    map[i, j] = "4";
                                    break;
                                }

                                case "4":
                                {
                                    for (var k = i; k <= 11; k++)
                                    {
                                        if (map[i, k] == "#")
                                        {
                                            break;
                                        }

                                        if (map[i, k] != "H")
                                        {
                                            map[i, k] = " ";
                                        }
                                    }

                                    map[i, j] = "3";
                                    map[i, j + 1] = " ";
                                    break;
                                }

                                case "3":
                                    map[i, j] = "►";
                                    break;
                                case "T":
                                    map[i, j] = "!";
                                    break;
                                case "!":
                                    map[i, j] = "+";
                                    break;
                                //--====== + ======--
                                case "+":
                                {
                                    map[i, j] = "T";
                                    var hit = true;
                                    if ((y == i) && (x > j))
                                    {
                                        for (var q = j; q < x; q++)
                                        {
                                            if (map[y, q] == "#")
                                            {
                                                hit = false;
                                                break;
                                            }
                                        }

                                        if (hit)
                                        {
                                            hp = hp - 1;
                                        }
                                    }
                                    else if ((y == i) && (x < j))
                                    {
                                        for (var q = j; q > x; q--)
                                        {
                                            if (map[y, q] == "#")
                                            {
                                                hit = false;
                                                break;
                                            }
                                        }

                                        if (hit)
                                        {
                                            hp = hp - 1;
                                        }
                                    }
                                    else if ((x == j) && (y < i))
                                    {
                                        for (var q = i; q > y; q--)
                                        {
                                            if (map[q, x] == "#")
                                            {
                                                hit = false;
                                                break;
                                            }
                                        }

                                        if (hit)
                                        {
                                            hp = hp - 1;
                                        }
                                    }
                                    else if ((x == j) && (y > i))
                                    {
                                        for (var q = i; q < y; q++)
                                        {
                                            if (map[q, x] == "#")
                                            {
                                                hit = false;
                                                break;
                                            }
                                        }

                                        if (hit)
                                        {
                                            hp = hp - 1;
                                        }
                                    }

                                    break;
                                }
                            }
                        }
                    }

                    if (hp >= 1)
                        continue;

                    Console.Clear();
                    Console.Write("ВЫ ПРОИГРAЛИ! GОЛОВА ПОБЕДИЛА.");
                    end = true;
                    break;
                }

                if (end)
                {
                    break;
                }

                if (boss == false)
                {
                    Console.Clear();
                    Console.WriteLine("Поздравляем, вы победили GОЛОВУ!");
                }

                boombs++;
                hp += 1;
                if (hp > 3)
                {
                    hp = 3;
                }

                lvl += 1;
                if (lvl == 5)
                {
                    MapMode();
                }
            }
        }
    }
}